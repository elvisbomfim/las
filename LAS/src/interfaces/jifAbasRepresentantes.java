/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import Utilitarios.WebServiceCep;
import bancodedados.RepresentanteBD;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import modelo.tabelas.ModeloTabelaRepresentantes;
import modelos.LetrasMaiusculas;
import modelos.Representante;

/**
 *
 * @author Jean
 */
public class jifAbasRepresentantes extends javax.swing.JInternalFrame {

    /**
     * Creates new form jifAbasRepresentantes
     */
    /**
     * Objetos temporarios
     */
    Representante representanteCadastro = new Representante();

    /**
     * Definição de ArrayList's
     */
    ArrayList<Representante> listaOriginalTemporariaRepresentante = new ArrayList();

    /**
     * Classes de definição de modelos de tabela
     */
    ModeloTabelaRepresentantes modeloTabelaRepresentante = new ModeloTabelaRepresentantes();

    /**
     * Classes de conexão com o banco
     */
    RepresentanteBD conexaoTabelaRepresentantes = new RepresentanteBD();

    int st = 0;

    public jifAbasRepresentantes() {
        initComponents();

        tbRepresentantesCadastrados.setModel(modeloTabelaRepresentante);

        //----------------Desabilitar bostoes cancelar atualização--------------
        btCancelarAtualizacaoRepresentantes.setVisible(false);

        buscarRepresentantesTabela();

        tfRepresentanteNome.setDocument(new LetrasMaiusculas());
        tfRepresentanteRua.setDocument(new LetrasMaiusculas());
        tfRepresentanteNumero.setDocument(new LetrasMaiusculas());
        tfRepresentanteComplemento.setDocument(new LetrasMaiusculas());
        tfRepresentanteBairro.setDocument(new LetrasMaiusculas());
        tfRepresentanteCidade.setDocument(new LetrasMaiusculas());
        tfRepresentanteCep.setDocument(new LetrasMaiusculas());
        tfRepresentanteCpf.setDocument(new LetrasMaiusculas());
        tfRepresentanteTelefone.setDocument(new LetrasMaiusculas());
        tfRepresentanteCelular.setDocument(new LetrasMaiusculas());
        tfRepresentanteNacionalidade.setDocument(new LetrasMaiusculas());

    }

    public void buscarRepresentantesTabela() {
        modeloTabelaRepresentante.inserirListaRepresentantes(conexaoTabelaRepresentantes.selecionarTodosRepresentantes());
        listaOriginalTemporariaRepresentante = modeloTabelaRepresentante.retornaListaRepresentantes();
        tbRepresentantesCadastrados.updateUI();
    }

    public Representante preencherDadosCadastroRepresentante() {
        representanteCadastro.setRepresentante_nome(tfRepresentanteNome.getText());
        representanteCadastro.setRepresentante_rua(tfRepresentanteRua.getText());
        representanteCadastro.setRepresentante_numero(tfRepresentanteNumero.getText());
        representanteCadastro.setRepresentante_complemento(tfRepresentanteComplemento.getText());
        representanteCadastro.setRepresentante_bairro(tfRepresentanteBairro.getText());
        representanteCadastro.setRepresentante_municipio(tfRepresentanteCidade.getText());
        representanteCadastro.setRepresentante_estado(cbRepresentanteEstado.getSelectedItem().toString());
        representanteCadastro.setRepresentante_cep(tfRepresentanteCep.getText());
        representanteCadastro.setRepresentante_cpf(tfRepresentanteCpf.getText());
        representanteCadastro.setRepresentante_telefone(tfRepresentanteTelefone.getText());
        representanteCadastro.setRepresentante_celular(tfRepresentanteCelular.getText());
        representanteCadastro.setRepresentante_nacionalidade(tfRepresentanteNacionalidade.getText());

        return representanteCadastro;

    }

    public void limparCamposCadastroRepresentante() {

        tfRepresentanteNome.setText("");
        tfRepresentanteRua.setText("");
        tfRepresentanteNumero.setText("");
        tfRepresentanteComplemento.setText("");
        tfRepresentanteBairro.setText("");
        tfRepresentanteCidade.setText("");
        tfRepresentanteCep.setText("");
        tfRepresentanteCpf.setText("");
        tfRepresentanteTelefone.setText("");
        tfRepresentanteCelular.setText("");
        tfRepresentanteNacionalidade.setText("");

        cbRepresentanteEstado.setSelectedIndex(0);

        tpnAbasRepresentantes.setTitleAt(0, "Cadastrar Novos Representantes");
        btFinalizarCadastroRepresentante.setToolTipText("Cadastrar");
        tpnAbasRepresentantes.setEnabledAt(1, true);
        tpnAbasRepresentantes.setSelectedIndex(1);
        btCancelarAtualizacaoRepresentantes.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpnAbasRepresentantes = new javax.swing.JTabbedPane();
        pnCadastrarNovosRepresentantes = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfRepresentanteCep = new javax.swing.JFormattedTextField();
        tfRepresentanteTelefone = new javax.swing.JFormattedTextField();
        tfRepresentanteCelular = new javax.swing.JFormattedTextField();
        tfRepresentanteNome = new javax.swing.JTextField();
        tfRepresentanteCpf = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfRepresentanteRua = new javax.swing.JTextField();
        tfRepresentanteBairro = new javax.swing.JTextField();
        tfRepresentanteCidade = new javax.swing.JTextField();
        cbRepresentanteEstado = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfRepresentanteNumero = new javax.swing.JTextField();
        tfRepresentanteComplemento = new javax.swing.JTextField();
        btFinalizarCadastroRepresentante = new javax.swing.JButton();
        btCancelarAtualizacaoRepresentantes = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        tfRepresentanteNacionalidade = new javax.swing.JTextField();
        pnGerenciarRepresentantes = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        tfPalavraChaveRepresentante = new javax.swing.JTextField();
        ckbRepresentanteCpf = new javax.swing.JCheckBox();
        ckbRepresentanteNome = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbRepresentantesCadastrados = new javax.swing.JTable();
        btEditarRepresentante = new javax.swing.JButton();
        btExcluirRepresentante = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Representante");
        setPreferredSize(new java.awt.Dimension(600, 600));

        jLabel1.setText("Nome:");

        jLabel2.setText("CPF:");

        jLabel3.setText("Telefone:");

        jLabel4.setText("Celular:");

        jLabel5.setText("CEP:");

        try {
            tfRepresentanteCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfRepresentanteCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfRepresentanteCepKeyReleased(evt);
            }
        });

        try {
            tfRepresentanteTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tfRepresentanteCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tfRepresentanteCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("Logradouro:");

        jLabel7.setText("Bairro:");

        jLabel8.setText("Cidade:");

        jLabel9.setText("Estado:");

        cbRepresentanteEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Selecionar---", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        jLabel10.setText("Complemento:");

        jLabel11.setText("Número:");

        btFinalizarCadastroRepresentante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/complete-file.png"))); // NOI18N
        btFinalizarCadastroRepresentante.setToolTipText("Cadastrar");
        btFinalizarCadastroRepresentante.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btFinalizarCadastroRepresentante.setPreferredSize(new java.awt.Dimension(150, 150));
        btFinalizarCadastroRepresentante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarCadastroRepresentanteActionPerformed(evt);
            }
        });

        btCancelarAtualizacaoRepresentantes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/if_edit-not-validated_85308.png"))); // NOI18N
        btCancelarAtualizacaoRepresentantes.setToolTipText("Cancelar");
        btCancelarAtualizacaoRepresentantes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCancelarAtualizacaoRepresentantes.setPreferredSize(new java.awt.Dimension(150, 150));
        btCancelarAtualizacaoRepresentantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarAtualizacaoRepresentantesActionPerformed(evt);
            }
        });

        jLabel13.setText("Nacionalidade:");

        javax.swing.GroupLayout pnCadastrarNovosRepresentantesLayout = new javax.swing.GroupLayout(pnCadastrarNovosRepresentantes);
        pnCadastrarNovosRepresentantes.setLayout(pnCadastrarNovosRepresentantesLayout);
        pnCadastrarNovosRepresentantesLayout.setHorizontalGroup(
            pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRepresentanteNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                        .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                                .addComponent(btCancelarAtualizacaoRepresentantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btFinalizarCadastroRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(34, 34, 34)
                                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfRepresentanteNome)
                                    .addComponent(tfRepresentanteCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                                        .addComponent(tfRepresentanteTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tfRepresentanteCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                                        .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                                                .addComponent(tfRepresentanteNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                                .addComponent(jLabel7)
                                                .addGap(13, 13, 13))
                                            .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                                                .addComponent(tfRepresentanteCep, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfRepresentanteRua, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfRepresentanteBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                                        .addComponent(tfRepresentanteCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbRepresentanteEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(tfRepresentanteComplemento))))
                        .addGap(30, 30, 30))))
        );
        pnCadastrarNovosRepresentantesLayout.setVerticalGroup(
            pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastrarNovosRepresentantesLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfRepresentanteNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfRepresentanteCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfRepresentanteTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tfRepresentanteCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfRepresentanteCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(tfRepresentanteRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfRepresentanteBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRepresentanteNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tfRepresentanteComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfRepresentanteCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cbRepresentanteEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tfRepresentanteNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(pnCadastrarNovosRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btFinalizarCadastroRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCancelarAtualizacaoRepresentantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        tpnAbasRepresentantes.addTab("Cadastrar Novos Representantes", pnCadastrarNovosRepresentantes);

        pnGerenciarRepresentantes.setPreferredSize(new java.awt.Dimension(600, 600));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtro de Busca", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel12.setText("Palavra-Chave:");

        tfPalavraChaveRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPalavraChaveRepresentanteKeyReleased(evt);
            }
        });

        ckbRepresentanteCpf.setText("CPF");

        ckbRepresentanteNome.setText("Nome");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfPalavraChaveRepresentante, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(ckbRepresentanteCpf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ckbRepresentanteNome)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tfPalavraChaveRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbRepresentanteCpf)
                    .addComponent(ckbRepresentanteNome))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        tbRepresentantesCadastrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbRepresentantesCadastrados);

        btEditarRepresentante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit-file.png"))); // NOI18N
        btEditarRepresentante.setToolTipText("Editar");
        btEditarRepresentante.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btEditarRepresentante.setPreferredSize(new java.awt.Dimension(150, 150));
        btEditarRepresentante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarRepresentanteActionPerformed(evt);
            }
        });

        btExcluirRepresentante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete-file.png"))); // NOI18N
        btExcluirRepresentante.setToolTipText("Excluir");
        btExcluirRepresentante.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btExcluirRepresentante.setPreferredSize(new java.awt.Dimension(150, 150));
        btExcluirRepresentante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirRepresentanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnGerenciarRepresentantesLayout = new javax.swing.GroupLayout(pnGerenciarRepresentantes);
        pnGerenciarRepresentantes.setLayout(pnGerenciarRepresentantesLayout);
        pnGerenciarRepresentantesLayout.setHorizontalGroup(
            pnGerenciarRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGerenciarRepresentantesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnGerenciarRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnGerenciarRepresentantesLayout.createSequentialGroup()
                        .addComponent(btExcluirRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btEditarRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnGerenciarRepresentantesLayout.setVerticalGroup(
            pnGerenciarRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGerenciarRepresentantesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnGerenciarRepresentantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btExcluirRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEditarRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        tpnAbasRepresentantes.addTab("Gerenciar Representantes", pnGerenciarRepresentantes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpnAbasRepresentantes)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpnAbasRepresentantes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btFinalizarCadastroRepresentanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarCadastroRepresentanteActionPerformed
        if (tfRepresentanteNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira o nome do cliente", "Aviso", 2);
            tfRepresentanteNome.requestFocus();
        } else {
            if (tfRepresentanteCpf.getValue() == null) {
                JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira o cpf do representante", "Aviso", 2);
                tfRepresentanteCpf.requestFocus();
            } else {
                if (btFinalizarCadastroRepresentante.getToolTipText().equals("Cadastrar")) {
                    if (tfRepresentanteCpf.getValue() != null) {
                        st = conexaoTabelaRepresentantes.pesquisarCpf(0, tfRepresentanteCpf.getText());
                        if (st == 1) {
                            JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "O cpf informado já existe!", "Aviso", 2);
                            tfRepresentanteCpf.requestFocus();
                            return;
                        }
                    }

                } else {
                    Representante cliente = modeloTabelaRepresentante.retornaListaRepresentantes().get(tbRepresentantesCadastrados.getSelectedRow());
                    if ((tfRepresentanteCpf.getValue() != null)) {
                        st = conexaoTabelaRepresentantes.pesquisarCpf(cliente.getRepresentante_id(), tfRepresentanteCpf.getText());
                        if (st == 1) {
                            JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "O cpf informado já existe!", "Aviso", 2);
                            tfRepresentanteCpf.requestFocus();
                            return;
                        }
                    }
                }
                if ((tfRepresentanteTelefone.getValue() == null) && (tfRepresentanteCelular.getValue() == null)) {
                    JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira o número do telefone ou do celular do representante", "Aviso", 2);
                    tfRepresentanteTelefone.requestFocus();
                } else {
                    if (tfRepresentanteCep.getValue() == null) {
                        JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira o cep do representante", "Aviso", 2);
                        tfRepresentanteCep.requestFocus();
                    } else {
                        if (tfRepresentanteRua.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira a rua do representante", "Aviso", 2);
                            tfRepresentanteRua.requestFocus();
                        } else {
                            if (tfRepresentanteNumero.getText().isEmpty()) {
                                JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira o número do representante", "Aviso", 2);
                                tfRepresentanteNumero.requestFocus();
                            } else {
                                if (tfRepresentanteBairro.getText().isEmpty()) {
                                    JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira o bairro do representante", "Aviso", 2);
                                    tfRepresentanteBairro.requestFocus();
                                } else {
                                    if (tfRepresentanteCidade.getText().isEmpty()) {
                                        JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira a cidade do representante", "Aviso", 2);
                                        tfRepresentanteCidade.requestFocus();
                                    } else {
                                        if (cbRepresentanteEstado.getSelectedIndex() == 0) {
                                            JOptionPane.showMessageDialog(pnCadastrarNovosRepresentantes, "Por favor insira o estado do representante", "Aviso", 2);
                                            cbRepresentanteEstado.requestFocus();
                                        } else {

                                            if (btFinalizarCadastroRepresentante.getToolTipText().equals("Cadastrar")) {
                                                conexaoTabelaRepresentantes.inserirNovoRepresentante(preencherDadosCadastroRepresentante());
                                                buscarRepresentantesTabela();
                                                limparCamposCadastroRepresentante();
                                            } else {
                                                conexaoTabelaRepresentantes.alterarRepresentante(modeloTabelaRepresentante.retornaListaRepresentantes().get(tbRepresentantesCadastrados.getSelectedRow()).getRepresentante_id(), preencherDadosCadastroRepresentante());

                                                buscarRepresentantesTabela();

                                                limparCamposCadastroRepresentante();
                                            }

                                        }
                                    }
                                }
                            }

                        }

                    }
                }
            }
        }

    }//GEN-LAST:event_btFinalizarCadastroRepresentanteActionPerformed

    private void btEditarRepresentanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarRepresentanteActionPerformed
        // TODO add your handling code here:
        if (tbRepresentantesCadastrados.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Não existem representantes selecionados para serem editados");
        } else {

            Representante representante = modeloTabelaRepresentante.retornaListaRepresentantes().get(tbRepresentantesCadastrados.getSelectedRow());
            tfRepresentanteNome.setText(representante.getRepresentante_nome());
            tfRepresentanteRua.setText(representante.getRepresentante_rua());
            tfRepresentanteNumero.setText(representante.getRepresentante_numero());
            tfRepresentanteComplemento.setText(representante.getRepresentante_complemento());
            tfRepresentanteBairro.setText(representante.getRepresentante_bairro());
            tfRepresentanteCidade.setText(representante.getRepresentante_municipio());
            tfRepresentanteCep.setValue(representante.getRepresentante_cep());
            tfRepresentanteCpf.setValue(representante.getRepresentante_cpf());
            tfRepresentanteTelefone.setValue(representante.getRepresentante_telefone());
            tfRepresentanteCelular.setValue(representante.getRepresentante_celular());
            tfRepresentanteNacionalidade.setText(representante.getRepresentante_nacionalidade());

            cbRepresentanteEstado.setSelectedItem(representante.getRepresentante_estado());
            tpnAbasRepresentantes.setSelectedIndex(0); // Mudando para a PRIMEIRA aba

            btFinalizarCadastroRepresentante.setToolTipText("Atualizar");
            tpnAbasRepresentantes.setTitleAt(0, "Atualizar dados");
            tpnAbasRepresentantes.setEnabledAt(1, false);
            btCancelarAtualizacaoRepresentantes.setVisible(true);

        }
    }//GEN-LAST:event_btEditarRepresentanteActionPerformed

    private void btExcluirRepresentanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirRepresentanteActionPerformed
        // TODO add your handling code here:
        if (tbRepresentantesCadastrados.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Não existem representantes selecionados para serem deletados");
        } else if (tbRepresentantesCadastrados.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não existem mais representantes para serem deletados");
        } else if (JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir esse cliente?", "Excluir cliente", 0) == 0) {
            if (tbRepresentantesCadastrados.getSelectedRow() != -1) {
                conexaoTabelaRepresentantes.removerRepresentante(modeloTabelaRepresentante.retornaListaRepresentantes().get(tbRepresentantesCadastrados.getSelectedRow()).getRepresentante_id(), tbRepresentantesCadastrados.getValueAt(tbRepresentantesCadastrados.getSelectedRow(), 0).toString());
                modeloTabelaRepresentante.inserirListaRepresentantes(conexaoTabelaRepresentantes.selecionarTodosRepresentantes());

                tbRepresentantesCadastrados.updateUI();
            }
        }
    }//GEN-LAST:event_btExcluirRepresentanteActionPerformed

    private void btCancelarAtualizacaoRepresentantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarAtualizacaoRepresentantesActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(rootPane, "Deseja mesmo cancelar as alterações", "Aviso", 0) == 0) {
            btFinalizarCadastroRepresentante.setToolTipText("Cadastrar");
            btCancelarAtualizacaoRepresentantes.setVisible(false);
            tpnAbasRepresentantes.setEnabledAt(1, true);
            tpnAbasRepresentantes.setSelectedIndex(1);
            tpnAbasRepresentantes.setTitleAt(0, "Cadastrar Novos Representantes");
            tfRepresentanteNome.setText("");
            tfRepresentanteCpf.setText("");
            tfRepresentanteTelefone.setText("");
            tfRepresentanteCep.setText("");
            tfRepresentanteNumero.setText("");
            tfRepresentanteComplemento.setText("");
            tfRepresentanteCidade.setText("");
            tfRepresentanteCelular.setText("");
            tfRepresentanteRua.setText("");
            tfRepresentanteBairro.setText("");
            tfRepresentanteNacionalidade.setText("");
            cbRepresentanteEstado.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btCancelarAtualizacaoRepresentantesActionPerformed

    private void tfPalavraChaveRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPalavraChaveRepresentanteKeyReleased
        if (tfPalavraChaveRepresentante.getText().isEmpty()) {
            modeloTabelaRepresentante.inserirListaRepresentantes(conexaoTabelaRepresentantes.selecionarTodosRepresentantes());
        } else {

            modeloTabelaRepresentante.inserirListaRepresentantes(conexaoTabelaRepresentantes.selecionarTodosRepresentantes());
            listaOriginalTemporariaRepresentante.clear();

            if (ckbRepresentanteCpf.isSelected()) {
                for (int i = 0; i < modeloTabelaRepresentante.retornaListaRepresentantes().size(); i++) {
                    if (modeloTabelaRepresentante.retornaListaRepresentantes().get(i).getRepresentante_cpf().toLowerCase().contains(tfPalavraChaveRepresentante.getText().toLowerCase())) {
                        listaOriginalTemporariaRepresentante.add(modeloTabelaRepresentante.retornaListaRepresentantes().get(i));
                    }
                }
            } else if (ckbRepresentanteNome.isSelected()) {
                for (int i = 0; i < modeloTabelaRepresentante.retornaListaRepresentantes().size(); i++) {
                    if (modeloTabelaRepresentante.retornaListaRepresentantes().get(i).getRepresentante_nome().toLowerCase().contains(tfPalavraChaveRepresentante.getText().toLowerCase())) {
                        listaOriginalTemporariaRepresentante.add(modeloTabelaRepresentante.retornaListaRepresentantes().get(i));
                    }
                }
            }

            modeloTabelaRepresentante.inserirListaRepresentantes(listaOriginalTemporariaRepresentante);

        }

        tbRepresentantesCadastrados.updateUI();
    }//GEN-LAST:event_tfPalavraChaveRepresentanteKeyReleased

    private void tfRepresentanteCepKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfRepresentanteCepKeyReleased
        String cp = tfRepresentanteCep.getText();
        cp = cp.replaceAll("\\D*", ""); //ignora qualquer coisa que não seja numero.  
        int cont = cp.length();

        if (cont == 8) {
            try {
                correio();
            } catch (Error e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_tfRepresentanteCepKeyReleased

    public void correio() {

        String cep = tfRepresentanteCep.getText();

        WebServiceCep webServiceCep = WebServiceCep.searchCep(cep);

        if (webServiceCep.wasSuccessful()) {

            tfRepresentanteRua.setText(webServiceCep.getLogradouroFull());
            tfRepresentanteBairro.setText(webServiceCep.getBairro());
            tfRepresentanteCidade.setText(webServiceCep.getCidade());
            cbRepresentanteEstado.setSelectedItem(webServiceCep.getUf());

        } else {
            JOptionPane.showMessageDialog(null, webServiceCep.getResultText());

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelarAtualizacaoRepresentantes;
    private javax.swing.JButton btEditarRepresentante;
    private javax.swing.JButton btExcluirRepresentante;
    private javax.swing.JButton btFinalizarCadastroRepresentante;
    private javax.swing.JComboBox<String> cbRepresentanteEstado;
    private javax.swing.JCheckBox ckbRepresentanteCpf;
    private javax.swing.JCheckBox ckbRepresentanteNome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnCadastrarNovosRepresentantes;
    private javax.swing.JPanel pnGerenciarRepresentantes;
    private javax.swing.JTable tbRepresentantesCadastrados;
    private javax.swing.JTextField tfPalavraChaveRepresentante;
    private javax.swing.JTextField tfRepresentanteBairro;
    private javax.swing.JFormattedTextField tfRepresentanteCelular;
    private javax.swing.JFormattedTextField tfRepresentanteCep;
    private javax.swing.JTextField tfRepresentanteCidade;
    private javax.swing.JTextField tfRepresentanteComplemento;
    private javax.swing.JFormattedTextField tfRepresentanteCpf;
    private javax.swing.JTextField tfRepresentanteNacionalidade;
    private javax.swing.JTextField tfRepresentanteNome;
    private javax.swing.JTextField tfRepresentanteNumero;
    private javax.swing.JTextField tfRepresentanteRua;
    private javax.swing.JFormattedTextField tfRepresentanteTelefone;
    private javax.swing.JTabbedPane tpnAbasRepresentantes;
    // End of variables declaration//GEN-END:variables
}
