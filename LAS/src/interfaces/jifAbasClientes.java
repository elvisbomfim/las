/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import Utilitarios.WebServiceCep;
import bancodedados.ClienteBD;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import modelo.tabelas.ModeloTabelaClientes;
import modelos.Cliente;
import modelos.LetrasMaiusculas;
import net.sf.nachocalendar.CalendarFactory;
import net.sf.nachocalendar.components.DateField;

/**
 *
 * @author Jean
 */
public class jifAbasClientes extends javax.swing.JInternalFrame {

    DateField dataInicioOperacao = CalendarFactory.createDateField();

    //Map<String, String> query = new HashMap<String, String>();
    /**
     * Objetos temporarios
     */
    Cliente clienteCadastro = new Cliente();

    /**
     * Definição de ArrayList's
     */
    ArrayList<Cliente> listaOriginalTemporariaCliente = new ArrayList();

    /**
     * Classes de definição de modelos de tabela
     */
    ModeloTabelaClientes modeloTabelaCliente = new ModeloTabelaClientes();

    /**
     * Classes de conexão com o banco
     */
    ClienteBD conexaoTabelaClientes = new ClienteBD();

    int st;

    public jifAbasClientes() {
        initComponents();

        //this.setSize(500, 600);
        tbClientesCadastrados.setModel(modeloTabelaCliente);
setFrameIcon(new ImageIcon(this.getClass().getResource("../imagens/icon.png")));
        //----------------buscas na tabela--------------------------------------
        buscarClientesTabela();

        //----------------Desabilitar bostoes cancelar atualização--------------
        btCancelarAtualizacaoCliente.setVisible(false);

        //teste tst = new teste(null, true);
        //tst.setVisible(true);
//        
        tfClienteNome.setDocument(new LetrasMaiusculas());
        tfClienteFantasia.setDocument(new LetrasMaiusculas());
        tfClienteEmail.setDocument(new LetrasMaiusculas());
        tfClienteInscMunicipal.setDocument(new LetrasMaiusculas());
        tfClienteInscEstadual.setDocument(new LetrasMaiusculas());
        tfClienteCep.setDocument(new LetrasMaiusculas());
        tfClienteRua.setDocument(new LetrasMaiusculas());
        tfClienteNumero.setDocument(new LetrasMaiusculas());
        tfClienteBairro.setDocument(new LetrasMaiusculas());
        tfClienteCidade.setDocument(new LetrasMaiusculas());
        tfClienteComplemento.setDocument(new LetrasMaiusculas());
        tfClienteUtmn.setDocument(new LetrasMaiusculas());
        tfClienteUtme.setDocument(new LetrasMaiusculas());
        Calendar cal = Calendar.getInstance();
        dataInicioOperacao.setBaseDate(cal.getTime());
        pnDataAtual.add(dataInicioOperacao);
        //Definindo o botão DateField (Data Inicio do Semestre) para seleção de uma data e atribuindo uma ação de mudança à ele.
        dataInicioOperacao.setSize((pnDataAtual.getWidth()), (pnDataAtual.getHeight()));

        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpnAbasClientes = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnCadastrarNovoCliente = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        tfClienteNome = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        tfClienteFantasia = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        tfClienteCpf = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        tfCliente_Cnpj = new javax.swing.JFormattedTextField();
        jLabel24 = new javax.swing.JLabel();
        tfClienteInscEstadual = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        tfClienteInscMunicipal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfClienteCep = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfClienteRua = new javax.swing.JTextField();
        tfClienteNumero = new javax.swing.JTextField();
        tfClienteBairro = new javax.swing.JTextField();
        tfClienteCidade = new javax.swing.JTextField();
        cbClienteEstado = new javax.swing.JComboBox<>();
        tfClienteTelefone = new javax.swing.JFormattedTextField();
        tfClienteCelular = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        tfClienteComplemento = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tfClienteEmail = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cbClienteAtividade = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        pnDataAtual = new com.toedter.calendar.JDayChooser();
        jLabel16 = new javax.swing.JLabel();
        tfClienteUtmn = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tfClienteUtme = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btCancelarAtualizacaoCliente = new javax.swing.JButton();
        btFinalizarCadastroCliente = new javax.swing.JButton();
        pnGerenciarClientes = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfPalavraChaveCliente = new javax.swing.JTextField();
        ckbClienteCpf = new javax.swing.JCheckBox();
        ckbClienteCnpj = new javax.swing.JCheckBox();
        ckbClienteNome = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbClientesCadastrados = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btEditarCliente = new javax.swing.JButton();
        btExcluirCliente = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cliente");
        setPreferredSize(new java.awt.Dimension(515, 600));

        tpnAbasClientes.setPreferredSize(new java.awt.Dimension(500, 600));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 650));

        pnCadastrarNovoCliente.setPreferredSize(new java.awt.Dimension(500, 650));

        jLabel12.setText("Nome:");

        tfClienteNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfClienteNomeActionPerformed(evt);
            }
        });

        jLabel37.setText("Nome Fantasia:");

        jLabel38.setText("CPF:");

        try {
            tfClienteCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel2.setText("CNPJ:");

        try {
            tfCliente_Cnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfCliente_Cnpj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCliente_CnpjActionPerformed(evt);
            }
        });

        jLabel24.setText("Insc Estadual:");

        jLabel25.setText("Insc Municipal:");

        jLabel3.setText("CEP:");

        try {
            tfClienteCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfClienteCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfClienteCepKeyReleased(evt);
            }
        });

        jLabel4.setText("Logradouro:");

        jLabel5.setText("Número:");

        jLabel6.setText("Bairro:");

        jLabel7.setText("Cidade:");

        jLabel8.setText("Estado:");

        jLabel9.setText("Telefone:");

        jLabel10.setText("Celular:");

        cbClienteEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecionar--", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        try {
            tfClienteTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tfClienteCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setText("Complemento:");

        jLabel13.setText("E-mail:");

        jLabel14.setText("Atividade:");

        cbClienteAtividade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecionar--", "Restaurante", "Condomínio", "Turístico" }));

        jLabel15.setText("Data da Atividade:");

        jLabel16.setText("UTM(N):");

        jLabel17.setText("UTM(E):");

        btCancelarAtualizacaoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/if_edit-not-validated_85308.png"))); // NOI18N
        btCancelarAtualizacaoCliente.setToolTipText("Cancelar");
        btCancelarAtualizacaoCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCancelarAtualizacaoCliente.setPreferredSize(new java.awt.Dimension(150, 150));
        btCancelarAtualizacaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarAtualizacaoClienteActionPerformed(evt);
            }
        });

        btFinalizarCadastroCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/complete-file.png"))); // NOI18N
        btFinalizarCadastroCliente.setToolTipText("Cadastrar");
        btFinalizarCadastroCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btFinalizarCadastroCliente.setPreferredSize(new java.awt.Dimension(150, 150));
        btFinalizarCadastroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarCadastroClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btCancelarAtualizacaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addComponent(btFinalizarCadastroCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btFinalizarCadastroCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCancelarAtualizacaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnCadastrarNovoClienteLayout = new javax.swing.GroupLayout(pnCadastrarNovoCliente);
        pnCadastrarNovoCliente.setLayout(pnCadastrarNovoClienteLayout);
        pnCadastrarNovoClienteLayout.setHorizontalGroup(
            pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                        .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addGap(31, 31, 31)
                        .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbClienteAtividade, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                                        .addComponent(tfClienteUtmn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel17)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pnDataAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                    .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                                        .addComponent(tfClienteUtme, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(283, 283, 283))
                            .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfClienteCelular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                    .addComponent(tfClienteTelefone, javax.swing.GroupLayout.Alignment.LEADING))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                        .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel12))
                                .addGap(5, 5, 5)
                                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfClienteFantasia, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                    .addComponent(tfClienteNome)))
                            .addGroup(pnCadastrarNovoClienteLayout.createSequentialGroup()
                                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11))
                                .addGap(10, 10, 10)
                                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbClienteEstado, javax.swing.GroupLayout.Alignment.LEADING, 0, 364, Short.MAX_VALUE)
                                        .addComponent(tfClienteCidade, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfClienteBairro, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfClienteNumero, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfClienteRua, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfClienteCep, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfClienteInscMunicipal, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfClienteEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfClienteCpf, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfCliente_Cnpj, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfClienteInscEstadual, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(tfClienteComplemento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnCadastrarNovoClienteLayout.setVerticalGroup(
            pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCadastrarNovoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tfClienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(tfClienteFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tfClienteEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(tfClienteCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfCliente_Cnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(tfClienteInscEstadual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(tfClienteInscMunicipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfClienteCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfClienteRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(tfClienteNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(tfClienteBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(tfClienteCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(cbClienteEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tfClienteComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfClienteTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tfClienteCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(cbClienteAtividade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15))
                    .addComponent(pnDataAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCadastrarNovoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel17)
                        .addComponent(tfClienteUtme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfClienteUtmn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(pnCadastrarNovoCliente);

        tpnAbasClientes.addTab("Cadastrar Novos Clientes", jScrollPane1);

        pnGerenciarClientes.setPreferredSize(new java.awt.Dimension(420, 580));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtro de Busca", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("Palavra-chave:");

        tfPalavraChaveCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPalavraChaveClienteKeyReleased(evt);
            }
        });

        ckbClienteCpf.setText("CPF");

        ckbClienteCnpj.setText("CNPJ");

        ckbClienteNome.setText("NOME");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPalavraChaveCliente)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(ckbClienteCpf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbClienteCnpj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbClienteNome)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfPalavraChaveCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbClienteCpf)
                    .addComponent(ckbClienteCnpj)
                    .addComponent(ckbClienteNome))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        tbClientesCadastrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NOME", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbClientesCadastrados);

        btEditarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit-file.png"))); // NOI18N
        btEditarCliente.setToolTipText("Editar");
        btEditarCliente.setBorder(null);
        btEditarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btEditarCliente.setPreferredSize(new java.awt.Dimension(150, 150));
        btEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarClienteActionPerformed(evt);
            }
        });

        btExcluirCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete-file.png"))); // NOI18N
        btExcluirCliente.setToolTipText("Excluir");
        btExcluirCliente.setBorder(null);
        btExcluirCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btExcluirCliente.setMaximumSize(new java.awt.Dimension(150, 150));
        btExcluirCliente.setPreferredSize(new java.awt.Dimension(150, 150));
        btExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addComponent(btEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnGerenciarClientesLayout = new javax.swing.GroupLayout(pnGerenciarClientes);
        pnGerenciarClientes.setLayout(pnGerenciarClientesLayout);
        pnGerenciarClientesLayout.setHorizontalGroup(
            pnGerenciarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGerenciarClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnGerenciarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnGerenciarClientesLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnGerenciarClientesLayout.setVerticalGroup(
            pnGerenciarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGerenciarClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addGap(55, 55, 55)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tpnAbasClientes.addTab("Gerenciar Clientes", pnGerenciarClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tpnAbasClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tpnAbasClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 515, 600);
    }// </editor-fold>//GEN-END:initComponents

    public void buscarClientesTabela() {
        modeloTabelaCliente.inserirListaClientes(conexaoTabelaClientes.selecionarTodosClientes());
        listaOriginalTemporariaCliente = modeloTabelaCliente.retornaListaClientes();
        tbClientesCadastrados.updateUI();
    }

    private void tfCliente_CnpjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCliente_CnpjActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCliente_CnpjActionPerformed

    private void btFinalizarCadastroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarCadastroClienteActionPerformed

        if (tfClienteNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira o nome do cliente", "Aviso", 2);
            tfClienteNome.requestFocus();
        } else {

            if ((tfClienteCpf.getValue() == null) && (tfCliente_Cnpj.getValue() == null)) {
                JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira o cpf ou o cnpj do cliente", "Aviso", 2);
                tfClienteCpf.requestFocus();
            } else {
                if (btFinalizarCadastroCliente.getToolTipText().equals("Cadastrar")) {
                    if (tfClienteCpf.getValue() != null) {
                        st = conexaoTabelaClientes.pesquisarCpf(0, tfClienteCpf.getText());
                        if (st == 1) {
                            JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "O cpf informado já existe!", "Aviso", 2);
                            tfClienteCpf.requestFocus();
                            return;
                        }
                    }
                    if (tfCliente_Cnpj.getValue() != null) {
                        st = conexaoTabelaClientes.pesquisarCnpj(0, tfCliente_Cnpj.getText());
                        if (st == 1) {
                            JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "O cnpj informado já existe!", "Aviso", 2);
                            tfCliente_Cnpj.requestFocus();
                            return;
                        }
                    }

                } else {
                    Cliente cliente = modeloTabelaCliente.retornaListaClientes().get(tbClientesCadastrados.getSelectedRow());
                    if ((tfClienteCpf.getValue() != null)) {
                        st = conexaoTabelaClientes.pesquisarCpf(cliente.getCliente_id(), tfClienteCpf.getText());
                        if (st == 1) {
                            JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "O cpf informado já existe!", "Aviso", 2);
                            tfClienteCpf.requestFocus();
                            return;
                        }
                    }
                    if (tfCliente_Cnpj.getValue() != null) {
                        st = conexaoTabelaClientes.pesquisarCnpj(cliente.getCliente_id(), tfCliente_Cnpj.getText());
                        if (st == 1) {
                            JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "O cnpj informado já existe!", "Aviso", 2);
                            tfCliente_Cnpj.requestFocus();
                            return;
                        }
                    }
                }

                if (tfClienteInscEstadual.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira a inscrição estadual do cliente", "Aviso", 2);
                    tfClienteInscEstadual.requestFocus();
                } else {
                    if (tfClienteInscMunicipal.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira a inscrição munícipal do cliente", "Aviso", 2);
                        tfClienteInscMunicipal.requestFocus();
                    } else {
                        if (tfClienteCep.getValue() == null) {
                            JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira o cep do cliente", "Aviso", 2);
                            tfClienteCep.requestFocus();
                        } else {
                            if (tfClienteRua.getText().isEmpty()) {
                                JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira a rua do cliente", "Aviso", 2);
                                tfClienteRua.requestFocus();
                            } else {
                                if (tfClienteNumero.getText().isEmpty()) {
                                    JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira o número do cliente", "Aviso", 2);
                                    tfClienteNumero.requestFocus();
                                } else {
                                    if (tfClienteBairro.getText().isEmpty()) {
                                        JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira o bairro do cliente", "Aviso", 2);
                                        tfClienteBairro.requestFocus();
                                    } else {
                                        if (tfClienteCidade.getText().isEmpty()) {
                                            JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira a cidade do cliente", "Aviso", 2);
                                            tfClienteCidade.requestFocus();
                                        } else {
                                            if (cbClienteEstado.getSelectedIndex() == 0) {
                                                JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira o estado do cliente", "Aviso", 2);
                                                cbClienteEstado.requestFocus();
                                            } else {
                                                if (cbClienteAtividade.getSelectedIndex() == 0) {
                                                    JOptionPane.showMessageDialog(pnCadastrarNovoCliente, "Por favor insira a atividade do cliente", "Aviso", 2);
                                                    cbClienteEstado.requestFocus();
                                                } else {
                                                    if (btFinalizarCadastroCliente.getToolTipText().equals("Cadastrar")) {
                                                        conexaoTabelaClientes.inserirNovoCliente(preencherDadosCadastroCliente());
                                                        buscarClientesTabela();
                                                        limparCamposCadastroCliente();
                                                    } else {
                                                        conexaoTabelaClientes.alterarCliente(modeloTabelaCliente.retornaListaClientes().get(tbClientesCadastrados.getSelectedRow()).getCliente_id(), preencherDadosCadastroCliente());

                                                        buscarClientesTabela();

                                                        limparCamposCadastroCliente();
                                                    }

                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_btFinalizarCadastroClienteActionPerformed

    public Cliente preencherDadosCadastroCliente() {

        clienteCadastro.setCliente_nome(tfClienteNome.getText());
        clienteCadastro.setCliente_fantasia(tfClienteFantasia.getText());
        clienteCadastro.setCliente_email(tfClienteEmail.getText());
        clienteCadastro.setCliente_cpf(tfClienteCpf.getText());
        clienteCadastro.setCliente_cnpj(tfCliente_Cnpj.getText());
        clienteCadastro.setCliente_insc_municipal(tfClienteInscMunicipal.getText());
        clienteCadastro.setCliente_insc_estadual(tfClienteInscEstadual.getText());
        clienteCadastro.setCliente_cep(tfClienteCep.getText());
        clienteCadastro.setCliente_endereco(tfClienteRua.getText());
        clienteCadastro.setCliente_numero(tfClienteNumero.getText());
        clienteCadastro.setCliente_bairro(tfClienteBairro.getText());
        clienteCadastro.setCliente_municipio(tfClienteCidade.getText());
        clienteCadastro.setCliente_estado(cbClienteEstado.getSelectedItem().toString());
        clienteCadastro.setCategoria_id(cbClienteAtividade.getSelectedIndex());
        clienteCadastro.setCliente_complemento(tfClienteComplemento.getText());
        clienteCadastro.setCliente_utmn(tfClienteUtmn.getText());
        clienteCadastro.setCliente_utme(tfClienteUtme.getText());
        clienteCadastro.setCliente_telefone(tfClienteTelefone.getText());
        clienteCadastro.setCliente_celular(tfClienteCelular.getText());
        Calendar cal = Calendar.getInstance();
        cal.setTime((Date) dataInicioOperacao.getValue());
        clienteCadastro.setCliente_data_atividade(cal);

        return clienteCadastro;

    }

    public void limparCamposCadastroCliente() {
        tfClienteNome.setText("");
        tfClienteFantasia.setText("");
        tfClienteEmail.setText("");
        tfClienteCpf.setText("");
        tfCliente_Cnpj.setText("");
        tfClienteInscMunicipal.setText("");
        tfClienteInscEstadual.setText("");
        tfClienteCep.setText("");
        tfClienteRua.setText("");
        tfClienteNumero.setText("");
        tfClienteBairro.setText("");
        tfClienteCidade.setText("");
        cbClienteEstado.setSelectedIndex(0);
        cbClienteAtividade.setSelectedIndex(0);
        tfClienteTelefone.setText("");
        tfClienteCelular.setText("");
        tfClienteComplemento.setText("");
        tfClienteUtmn.setText("");
        tfClienteUtme.setText("");
        tpnAbasClientes.setTitleAt(0, "Cadastrar Novos Clientes");
        btFinalizarCadastroCliente.setToolTipText("Cadastrar");
        tpnAbasClientes.setEnabledAt(1, true);
        tpnAbasClientes.setSelectedIndex(1);
        btCancelarAtualizacaoCliente.setVisible(false);

    }

    private void tfPalavraChaveClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPalavraChaveClienteKeyReleased
        // TODO add your handling code here:
        if (tfPalavraChaveCliente.getText().isEmpty()) {
            modeloTabelaCliente.inserirListaClientes(conexaoTabelaClientes.selecionarTodosClientes());
        } else {

            modeloTabelaCliente.inserirListaClientes(conexaoTabelaClientes.selecionarTodosClientes());
            listaOriginalTemporariaCliente.clear();

            if (ckbClienteCpf.isSelected()) {
                for (int i = 0; i < modeloTabelaCliente.retornaListaClientes().size(); i++) {
                    if (modeloTabelaCliente.retornaListaClientes().get(i).getCliente_cpf().toLowerCase().contains(tfPalavraChaveCliente.getText().toLowerCase())) {
                        listaOriginalTemporariaCliente.add(modeloTabelaCliente.retornaListaClientes().get(i));
                    }
                }
            } else if (ckbClienteNome.isSelected()) {
                for (int i = 0; i < modeloTabelaCliente.retornaListaClientes().size(); i++) {
                    if (modeloTabelaCliente.retornaListaClientes().get(i).getCliente_nome().toLowerCase().contains(tfPalavraChaveCliente.getText().toLowerCase())) {
                        listaOriginalTemporariaCliente.add(modeloTabelaCliente.retornaListaClientes().get(i));
                    }
                }
            } else if (ckbClienteCnpj.isSelected()) {
                for (int i = 0; i < modeloTabelaCliente.retornaListaClientes().size(); i++) {
                    if (modeloTabelaCliente.retornaListaClientes().get(i).getCliente_cnpj().toLowerCase().contains(tfPalavraChaveCliente.getText().toLowerCase())) {
                        listaOriginalTemporariaCliente.add(modeloTabelaCliente.retornaListaClientes().get(i));
                    }
                }
            }

            modeloTabelaCliente.inserirListaClientes(listaOriginalTemporariaCliente);

        }

        tbClientesCadastrados.updateUI();
    }//GEN-LAST:event_tfPalavraChaveClienteKeyReleased

    private void btExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirClienteActionPerformed
        // TODO add your handling code here:
        if (tbClientesCadastrados.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Não existem clientes selecionados para serem deletados");
        } else if (tbClientesCadastrados.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não existem mais clientes para serem deletados");
        } else if (JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir esse cliente?", "Excluir cliente", 0) == 0) {
            if (tbClientesCadastrados.getSelectedRow() != -1) {
                conexaoTabelaClientes.removerCliente(modeloTabelaCliente.retornaListaClientes().get(tbClientesCadastrados.getSelectedRow()).getCliente_id(), tbClientesCadastrados.getValueAt(tbClientesCadastrados.getSelectedRow(), 0).toString());
                modeloTabelaCliente.inserirListaClientes(conexaoTabelaClientes.selecionarTodosClientes());

                tbClientesCadastrados.updateUI();
            }
        }
    }//GEN-LAST:event_btExcluirClienteActionPerformed

    private void btEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarClienteActionPerformed
        // TODO add your handling code here:
        if (tbClientesCadastrados.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Não existem clientes selecionados para serem editados");
        } else {

            Cliente cliente = modeloTabelaCliente.retornaListaClientes().get(tbClientesCadastrados.getSelectedRow());

            tfClienteNome.setText(cliente.getCliente_nome());
            tfClienteFantasia.setText(cliente.getCliente_fantasia());
            tfClienteEmail.setText(cliente.getCliente_email());
            tfClienteCpf.setValue(cliente.getCliente_cpf());
            tfCliente_Cnpj.setValue(cliente.getCliente_cnpj());
            tfClienteInscMunicipal.setText(cliente.getCliente_insc_municipal());
            tfClienteInscEstadual.setText(cliente.getCliente_insc_estadual());
            tfClienteCep.setValue(cliente.getCliente_cep());
            tfClienteRua.setText(cliente.getCliente_endereco());
            tfClienteNumero.setText(cliente.getCliente_numero());
            tfClienteBairro.setText(cliente.getCliente_bairro());
            tfClienteCidade.setText(cliente.getCliente_municipio());
            cbClienteEstado.setSelectedItem(cliente.getCliente_estado());
            cbClienteAtividade.setSelectedIndex(cliente.getCategoria_id());
            tfClienteComplemento.setText(cliente.getCliente_complemento());
            tfClienteTelefone.setText(cliente.getCliente_telefone());
            tfClienteCelular.setText(cliente.getCliente_celular());
            Date data1 = cliente.getCliente_data_atividade().getTime();
            tfClienteUtmn.setText(cliente.getCliente_utmn());
            tfClienteUtme.setText(cliente.getCliente_utme());

            dataInicioOperacao.setValue(data1);

            tpnAbasClientes.setSelectedIndex(0); // Mudando para a PRIMEIRA aba
            btFinalizarCadastroCliente.setToolTipText("Atualizar");
            tpnAbasClientes.setTitleAt(0, "Atualizar dados");
            tpnAbasClientes.setEnabledAt(1, false);
            btCancelarAtualizacaoCliente.setVisible(true);

        }
    }//GEN-LAST:event_btEditarClienteActionPerformed

    private void btCancelarAtualizacaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarAtualizacaoClienteActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(rootPane, "Deseja mesmo cancelar as alterações", "Aviso", 0) == 0) {
            btFinalizarCadastroCliente.setToolTipText("Cadastrar");
            btCancelarAtualizacaoCliente.setVisible(false);
            tpnAbasClientes.setEnabledAt(1, true);
            tpnAbasClientes.setSelectedIndex(1);
            tpnAbasClientes.setTitleAt(0, "Cadastrar Novos Clientes");
            tfClienteNome.setText("");
            tfClienteFantasia.setText("");
            tfClienteEmail.setText("");
            tfClienteCpf.setText("");
            tfCliente_Cnpj.setText("");
            tfClienteInscMunicipal.setText("");
            tfClienteInscEstadual.setText("");
            tfClienteCep.setText("");
            tfClienteRua.setText("");
            tfClienteNumero.setText("");
            tfClienteBairro.setText("");
            tfClienteCidade.setText("");
            cbClienteEstado.setSelectedIndex(0);
            cbClienteAtividade.setSelectedIndex(0);
            tfClienteComplemento.setText("");
            tfClienteTelefone.setText("");
            tfClienteCelular.setText("");

        }
    }//GEN-LAST:event_btCancelarAtualizacaoClienteActionPerformed

    private void tfClienteNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfClienteNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfClienteNomeActionPerformed

    private void tfClienteCepKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfClienteCepKeyReleased
        String cp = tfClienteCep.getText();
        cp = cp.replaceAll("\\D*", ""); //ignora qualquer coisa que não seja numero.  
        int cont = cp.length();

        if (cont == 8) {
            try {
                correio();
            } catch (Error e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_tfClienteCepKeyReleased

    public void correio() {

        String cep = tfClienteCep.getText();

        WebServiceCep webServiceCep = WebServiceCep.searchCep(cep);

        if (webServiceCep.wasSuccessful()) {

            tfClienteRua.setText(webServiceCep.getLogradouroFull());
            tfClienteBairro.setText(webServiceCep.getBairro());
            tfClienteCidade.setText(webServiceCep.getCidade());
            cbClienteEstado.setSelectedItem(webServiceCep.getUf());

        } else {
            JOptionPane.showMessageDialog(null, webServiceCep.getResultText());

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelarAtualizacaoCliente;
    private javax.swing.JButton btEditarCliente;
    private javax.swing.JButton btExcluirCliente;
    private javax.swing.JButton btFinalizarCadastroCliente;
    private javax.swing.JComboBox<String> cbClienteAtividade;
    private javax.swing.JComboBox<String> cbClienteEstado;
    private javax.swing.JCheckBox ckbClienteCnpj;
    private javax.swing.JCheckBox ckbClienteCpf;
    private javax.swing.JCheckBox ckbClienteNome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnCadastrarNovoCliente;
    private com.toedter.calendar.JDayChooser pnDataAtual;
    private javax.swing.JPanel pnGerenciarClientes;
    private javax.swing.JTable tbClientesCadastrados;
    private javax.swing.JTextField tfClienteBairro;
    private javax.swing.JFormattedTextField tfClienteCelular;
    private javax.swing.JFormattedTextField tfClienteCep;
    private javax.swing.JTextField tfClienteCidade;
    private javax.swing.JTextField tfClienteComplemento;
    private javax.swing.JFormattedTextField tfClienteCpf;
    private javax.swing.JTextField tfClienteEmail;
    private javax.swing.JTextField tfClienteFantasia;
    private javax.swing.JTextField tfClienteInscEstadual;
    private javax.swing.JTextField tfClienteInscMunicipal;
    private javax.swing.JTextField tfClienteNome;
    private javax.swing.JTextField tfClienteNumero;
    private javax.swing.JTextField tfClienteRua;
    private javax.swing.JFormattedTextField tfClienteTelefone;
    private javax.swing.JTextField tfClienteUtme;
    private javax.swing.JTextField tfClienteUtmn;
    private javax.swing.JFormattedTextField tfCliente_Cnpj;
    private javax.swing.JTextField tfPalavraChaveCliente;
    private javax.swing.JTabbedPane tpnAbasClientes;
    // End of variables declaration//GEN-END:variables
}
