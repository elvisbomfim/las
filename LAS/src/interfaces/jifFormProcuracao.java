/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import bancodedados.ClienteBD;
import bancodedados.ConexaoPDF;
import bancodedados.ProcuracaoBD;
import bancodedados.ProfissionalBD;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import modelo.tabelas.ModeloTabelaProcuracoes;
import modelos.LetrasMaiusculas;
import modelos.Procuracao;
import modelos.Profissional;
import modelos.Representante;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import net.sf.nachocalendar.CalendarFactory;
import net.sf.nachocalendar.components.DateField;

/**
 *
 * @author Jean
 */
public class jifFormProcuracao extends javax.swing.JInternalFrame {

    DateField dataAtual = CalendarFactory.createDateField();
    /**
     * Creates new form jifFormProcuracao
     */
    ArrayList<Procuracao> listaOriginalTemporariaProcuracao = new ArrayList();

    /**
     * Objetos temporarios
     */
    Procuracao procuracaoCadastro = new Procuracao();
    Representante representanteTemporario = new Representante();
    Profissional profissionalTemporario = new Profissional();

    /**
     * Classes de definição de modelos de tabela
     */
    ModeloTabelaProcuracoes modeloTabelaProcuracoes = new ModeloTabelaProcuracoes();

    /**
     * Objetos temporarios
     */
    ProcuracaoBD conexaoTabelaProcuracoes = new ProcuracaoBD();
    ClienteBD conexaoTabelaClientes = new ClienteBD();
    ProfissionalBD conexaoTabelaProfissionais = new ProfissionalBD();

    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    public jifFormProcuracao() {
        initComponents();
        conexao = ConexaoPDF.conector();

        Calendar cal = Calendar.getInstance();
        dataAtual.setBaseDate(cal.getTime());
        pnDataAtual.add(dataAtual);
        //Definindo o botão DateField (Data Inicio do Semestre) para seleção de uma data e atribuindo uma ação de mudança à ele.
        dataAtual.setSize((pnDataAtual.getWidth()), (pnDataAtual.getHeight()));

        btCancelarAtualizacaoProcuracao.setVisible(false);

        tbProcuracao.setModel(modeloTabelaProcuracoes);
        buscarProcuracoesTabela();

        tfProcuracaoRepresentante.setDocument(new LetrasMaiusculas());
        tfProcuracaoProfissional.setDocument(new LetrasMaiusculas());
        tfProcuracaoCidade.setDocument(new LetrasMaiusculas());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpnAbasProcuracoes = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfProcuracaoCidade = new javax.swing.JTextField();
        cbProcuracaoEstado = new javax.swing.JComboBox<>();
        tfProcuracaoProfissional = new javax.swing.JTextField();
        tfProcuracaoRepresentante = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pnDataAtual = new com.toedter.calendar.JDayChooser();
        jPanel3 = new javax.swing.JPanel();
        btFinalizarCadastroProcuracao = new javax.swing.JButton();
        btCancelarAtualizacaoProcuracao = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tfPalavraChaveProcuracao = new javax.swing.JTextField();
        ckbProcuracaoRepresentante = new javax.swing.JCheckBox();
        ckbProcuracaoProfissional = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProcuracao = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btEditarRecibo = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btExcluirRecibo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Procuração");
        setPreferredSize(new java.awt.Dimension(515, 600));

        jLabel1.setText("Representante:");

        jLabel2.setText("Profissional:");

        jLabel3.setText("Cidade:");

        jLabel4.setText("Estado:");

        cbProcuracaoEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecione--", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        tfProcuracaoProfissional.setEditable(false);
        tfProcuracaoProfissional.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfProcuracaoProfissionalMouseClicked(evt);
            }
        });

        tfProcuracaoRepresentante.setEditable(false);
        tfProcuracaoRepresentante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfProcuracaoRepresentanteMouseClicked(evt);
            }
        });

        jLabel5.setText("Data:");

        btFinalizarCadastroProcuracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/complete-file.png"))); // NOI18N
        btFinalizarCadastroProcuracao.setToolTipText("Cadastrar");
        btFinalizarCadastroProcuracao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btFinalizarCadastroProcuracao.setPreferredSize(new java.awt.Dimension(150, 150));
        btFinalizarCadastroProcuracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarCadastroProcuracaoActionPerformed(evt);
            }
        });

        btCancelarAtualizacaoProcuracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/if_edit-not-validated_85308.png"))); // NOI18N
        btCancelarAtualizacaoProcuracao.setToolTipText("Cancelar");
        btCancelarAtualizacaoProcuracao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCancelarAtualizacaoProcuracao.setPreferredSize(new java.awt.Dimension(150, 150));
        btCancelarAtualizacaoProcuracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarAtualizacaoProcuracaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(btCancelarAtualizacaoProcuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btFinalizarCadastroProcuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCancelarAtualizacaoProcuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btFinalizarCadastroProcuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfProcuracaoRepresentante)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tfProcuracaoCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbProcuracaoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(pnDataAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 60, Short.MAX_VALUE))
                            .addComponent(tfProcuracaoProfissional)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfProcuracaoRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfProcuracaoProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbProcuracaoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(tfProcuracaoCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(pnDataAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tpnAbasProcuracoes.addTab("Gerar Procurações", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtro de Busca", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel8.setText("Palavra-Chave:");

        tfPalavraChaveProcuracao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPalavraChaveProcuracaoKeyReleased(evt);
            }
        });

        ckbProcuracaoRepresentante.setText("Representante");

        ckbProcuracaoProfissional.setText("Profissional");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel8)
                .addGap(42, 42, 42)
                .addComponent(ckbProcuracaoRepresentante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbProcuracaoProfissional)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(tfPalavraChaveProcuracao)
                .addGap(12, 12, 12))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfPalavraChaveProcuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbProcuracaoRepresentante)
                    .addComponent(ckbProcuracaoProfissional))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tbProcuracao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbProcuracao);

        btEditarRecibo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit-file.png"))); // NOI18N
        btEditarRecibo.setToolTipText("Editar");
        btEditarRecibo.setPreferredSize(new java.awt.Dimension(150, 150));
        btEditarRecibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarReciboActionPerformed(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/printer-128.png"))); // NOI18N
        btnImprimir.setToolTipText("Editar");
        btnImprimir.setPreferredSize(new java.awt.Dimension(150, 150));
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btExcluirRecibo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete-file.png"))); // NOI18N
        btExcluirRecibo.setToolTipText("Excluir");
        btExcluirRecibo.setPreferredSize(new java.awt.Dimension(150, 150));
        btExcluirRecibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirReciboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(btExcluirRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btEditarRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btExcluirRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEditarRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tpnAbasProcuracoes.addTab("Gerenciar Procurações", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tpnAbasProcuracoes))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tpnAbasProcuracoes))
        );

        setBounds(0, 0, 515, 600);
    }// </editor-fold>//GEN-END:initComponents

    public void buscarProcuracoesTabela() {

        modeloTabelaProcuracoes.inserirListaProcuracoes(conexaoTabelaProcuracoes.selecionarTodasProcuracoes());
        listaOriginalTemporariaProcuracao = modeloTabelaProcuracoes.retornaListaProcuracoes();
        tbProcuracao.updateUI();
    }

    private void btEditarReciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarReciboActionPerformed
        // TODO add your handling code here:
        if (tbProcuracao.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Não existem relatorios selecionados para serem editados");
        } else {

            Procuracao procuracao = modeloTabelaProcuracoes.retornaListaProcuracoes().get(tbProcuracao.getSelectedRow());
            //Contratante contratant =  new Contratante();
            //ArrayList<Contratante> contratante = conexaoTabelaContratante.selecionarContratanteEspecifico(procuracao.getContratante_id());
            //ArrayList<Profissional> profissional = conexaoTabelaProfissionais.selecionarProfissionalEspecifico(procuracao.getProfissional_id());

            System.out.println(procuracao.getProcuracao_profissional());
            // tfReciboContratante.setText();
            tfProcuracaoRepresentante.setText(procuracao.getProcuracao_representante());
            tfProcuracaoProfissional.setText(procuracao.getProcuracao_profissional());
            tfProcuracaoCidade.setText(procuracao.getProcuracao_cidade());
            cbProcuracaoEstado.setSelectedItem(procuracao.getProcuracao_estado());
            representanteTemporario.setRepresentante_id(procuracao.getRepresentante_id());
            profissionalTemporario.setProfissional_id(procuracao.getProfissional_id());
            Date data1 = procuracao.getProcuracao_data().getTime();

            dataAtual.setValue(data1);

            tpnAbasProcuracoes.setSelectedIndex(0); // Mudando para a PRIMEIRA aba

            btFinalizarCadastroProcuracao.setToolTipText("Atualizar");
            tpnAbasProcuracoes.setTitleAt(0, "Atualizar dados");
            tpnAbasProcuracoes.setEnabledAt(1, false);
            btCancelarAtualizacaoProcuracao.setVisible(true);
    }//GEN-LAST:event_btEditarReciboActionPerformed
    }
    private void btExcluirReciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirReciboActionPerformed
        // TODO add your handling code here:
        if (tbProcuracao.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Não existem relatorios selecionados para serem deletados");
        } else if (tbProcuracao.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não existem mais relatorios para serem deletados");
        } else if (JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir esse relatorio?", "Excluir relatorio", 0) == 0) {
            if (tbProcuracao.getSelectedRow() != -1) {
                conexaoTabelaProcuracoes.removerProcuracao(modeloTabelaProcuracoes.retornaListaProcuracoes().get(tbProcuracao.getSelectedRow()).getProcucacao_id());
                modeloTabelaProcuracoes.inserirListaProcuracoes(conexaoTabelaProcuracoes.selecionarTodasProcuracoes());

                tbProcuracao.updateUI();
            }
        }
    }//GEN-LAST:event_btExcluirReciboActionPerformed

    private void tfPalavraChaveProcuracaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPalavraChaveProcuracaoKeyReleased
        // TODO add your handling code here:
        if (tfPalavraChaveProcuracao.getText().isEmpty()) {
            modeloTabelaProcuracoes.inserirListaProcuracoes(conexaoTabelaProcuracoes.selecionarTodasProcuracoes());
        } else {

            modeloTabelaProcuracoes.inserirListaProcuracoes(conexaoTabelaProcuracoes.selecionarTodasProcuracoes());
            listaOriginalTemporariaProcuracao.clear();

            if (ckbProcuracaoRepresentante.isSelected()) {
                for (int i = 0; i < modeloTabelaProcuracoes.retornaListaProcuracoes().size(); i++) {
                    if (modeloTabelaProcuracoes.retornaListaProcuracoes().get(i).getProcuracao_representante().toLowerCase().contains(tfPalavraChaveProcuracao.getText().toLowerCase())) {
                        listaOriginalTemporariaProcuracao.add(modeloTabelaProcuracoes.retornaListaProcuracoes().get(i));
                    }
                }
            } else if (ckbProcuracaoProfissional.isSelected()) {
                for (int i = 0; i < modeloTabelaProcuracoes.retornaListaProcuracoes().size(); i++) {
                    if (modeloTabelaProcuracoes.retornaListaProcuracoes().get(i).getProcuracao_profissional().toLowerCase().contains(tfPalavraChaveProcuracao.getText().toLowerCase())) {
                        listaOriginalTemporariaProcuracao.add(modeloTabelaProcuracoes.retornaListaProcuracoes().get(i));
                    }
                }
            }

            modeloTabelaProcuracoes.inserirListaProcuracoes(listaOriginalTemporariaProcuracao);

        }

        tbProcuracao.updateUI();
    }//GEN-LAST:event_tfPalavraChaveProcuracaoKeyReleased

    private void btCancelarAtualizacaoProcuracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarAtualizacaoProcuracaoActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(rootPane, "Deseja mesmo cancelar as alterações", "Aviso", 0) == 0) {
            btFinalizarCadastroProcuracao.setToolTipText("Cadastrar");
            btCancelarAtualizacaoProcuracao.setVisible(false);
            tpnAbasProcuracoes.setEnabledAt(1, true);
            tpnAbasProcuracoes.setSelectedIndex(1);
            tpnAbasProcuracoes.setTitleAt(0, "Gerar Procurações");
            tfProcuracaoRepresentante.setText("");
            tfProcuracaoProfissional.setText("");
            tfProcuracaoCidade.setText("");

            cbProcuracaoEstado.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btCancelarAtualizacaoProcuracaoActionPerformed

    private void btFinalizarCadastroProcuracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarCadastroProcuracaoActionPerformed
        if (tfProcuracaoRepresentante.getText().isEmpty()) {
            JOptionPane.showMessageDialog(tpnAbasProcuracoes, "Por favor selecione o representante", "Aviso", 2);
            tfProcuracaoRepresentante.requestFocus();
        } else {
            if (tfProcuracaoProfissional.getText().isEmpty()) {
                JOptionPane.showMessageDialog(tpnAbasProcuracoes, "Por favor selecione o profissional", "Aviso", 2);
                tfProcuracaoProfissional.requestFocus();
            } else {
                if (btFinalizarCadastroProcuracao.getToolTipText().equals("Cadastrar")) {
                    conexaoTabelaProcuracoes.inserirNovoProcuracao(preencherDadosCadastroProcuracao());
                    buscarProcuracoesTabela();
                    limparCamposCadastroProcuracao();
                } else {
                    conexaoTabelaProcuracoes.alterarRequerimento(modeloTabelaProcuracoes.retornaListaProcuracoes().get(tbProcuracao.getSelectedRow()).getProcucacao_id(), preencherDadosCadastroProcuracao());

                    buscarProcuracoesTabela();
                    limparCamposCadastroProcuracao();
                }
            }
        }


    }//GEN-LAST:event_btFinalizarCadastroProcuracaoActionPerformed

    private void tfProcuracaoProfissionalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfProcuracaoProfissionalMouseClicked
        // TODO add your handling code here:
        TelaRelatorioProfissional telaRelatorioProcuracaoProfissional = new TelaRelatorioProfissional(null, true);
        telaRelatorioProcuracaoProfissional.setVisible(true);
        // Criando o cliente à receber o cliente da tela relatorioprocuracao
        Profissional profissionalSelecionado = new Profissional();
        profissionalSelecionado = telaRelatorioProcuracaoProfissional.retornarProfissionalSelecionado();
        if (profissionalSelecionado != null) {
            tfProcuracaoProfissional.setText(profissionalSelecionado.getProfissional_nome());
            profissionalTemporario = telaRelatorioProcuracaoProfissional.retornarProfissionalSelecionado();
        }
    }//GEN-LAST:event_tfProcuracaoProfissionalMouseClicked

    private void tfProcuracaoRepresentanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfProcuracaoRepresentanteMouseClicked
        // TODO add your handling code here:
        TelaRelatorioRepresentante telaRelatorioRepresentante = new TelaRelatorioRepresentante(null, true);
        telaRelatorioRepresentante.setVisible(true);
        // Criando o cliente à receber o cliente da tela relatorioprocuracao
        Representante representanteSelecionado = new Representante();
        representanteSelecionado = telaRelatorioRepresentante.retornarRepresentanteSelecionado();
        if (representanteSelecionado != null) {
            tfProcuracaoRepresentante.setText(representanteSelecionado.getRepresentante_nome());
            representanteTemporario = telaRelatorioRepresentante.retornarRepresentanteSelecionado();
        }
    }//GEN-LAST:event_tfProcuracaoRepresentanteMouseClicked

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
        if (tbProcuracao.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Não existem relatorios selecionados para serem imprimidos");
        } else {

            Procuracao procuracao = modeloTabelaProcuracoes.retornaListaProcuracoes().get(tbProcuracao.getSelectedRow());
            procuracao.getProcucacao_id();

            Date data1 = procuracao.getProcuracao_data().getTime();

            DateFormat df = DateFormat.getDateInstance(DateFormat.LONG);

            try {
                //usando a clsse HashMap para criar um filtro
                //  JOptionPane.showMessageDialog(rootPane, procuracao.getRecibo_id());
                HashMap filtro = new HashMap();
                filtro.put("idprocuracao", procuracao.getProcucacao_id());
                filtro.put("data", df.format(data1.getTime()));
                //Usando a classe JasperPrint para preparar a impressão de um relatório
                JasperPrint print = JasperFillManager.fillReport("build/classes/reports/Procuracao.jasper", filtro, conexao);
                //a linha abaixo exibe o relatório através da classe JasperViewer
                JasperViewer.viewReport(print, false);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    public Procuracao preencherDadosCadastroProcuracao() {

        procuracaoCadastro.setRepresentante_id(representanteTemporario.getRepresentante_id());
        procuracaoCadastro.setProfissional_id(profissionalTemporario.getProfissional_id());
        procuracaoCadastro.setProcuracao_representante(tfProcuracaoRepresentante.getText());
        procuracaoCadastro.setProcuracao_profissional(tfProcuracaoProfissional.getText());
        procuracaoCadastro.setProcuracao_cidade(tfProcuracaoCidade.getText());
        procuracaoCadastro.setProcuracao_estado(cbProcuracaoEstado.getSelectedItem().toString());

        Calendar cal = Calendar.getInstance();
        cal.setTime((Date) dataAtual.getValue());
        procuracaoCadastro.setProcuracao_data(cal);

        return procuracaoCadastro;

    }

    public void limparCamposCadastroProcuracao() {
        tfProcuracaoRepresentante.setText("");
        tfProcuracaoProfissional.setText("");
        tfProcuracaoCidade.setText("");
        cbProcuracaoEstado.setSelectedIndex(0);
        tpnAbasProcuracoes.setTitleAt(0, "Cadastrar Novas Procurações");
        btFinalizarCadastroProcuracao.setToolTipText("Cadastrar");
        tpnAbasProcuracoes.setEnabledAt(1, true);
        tpnAbasProcuracoes.setSelectedIndex(1);
        btCancelarAtualizacaoProcuracao.setVisible(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelarAtualizacaoProcuracao;
    private javax.swing.JButton btEditarRecibo;
    private javax.swing.JButton btExcluirRecibo;
    private javax.swing.JButton btFinalizarCadastroProcuracao;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JComboBox<String> cbProcuracaoEstado;
    private javax.swing.JCheckBox ckbProcuracaoProfissional;
    private javax.swing.JCheckBox ckbProcuracaoRepresentante;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDayChooser pnDataAtual;
    private javax.swing.JTable tbProcuracao;
    private javax.swing.JTextField tfPalavraChaveProcuracao;
    private javax.swing.JTextField tfProcuracaoCidade;
    private javax.swing.JTextField tfProcuracaoProfissional;
    private javax.swing.JTextField tfProcuracaoRepresentante;
    private javax.swing.JTabbedPane tpnAbasProcuracoes;
    // End of variables declaration//GEN-END:variables
}
